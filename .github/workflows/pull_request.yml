# Candace Savonen Dec 2021
# Updated May 2023

name: Pull Request

on:
  pull_request:
    branches: [ main, staging ]

jobs:

  yaml-check:
    name: Load user automation choices
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

        # Use the yaml-env-action action.
      - name: Load environment from YAML
        uses: doughepi/yaml-env-action@v1.0.0
        with:
            files: config_automation.yml # Pass a space-separated list of configuration files. Rightmost files take precedence.

      # Delete the branch if this has been run before
      - name: Delete branch locally and remotely
        run: git push origin --delete preview-${{ github.event.pull_request.number }} || echo "No branch to delete"

      # Make the branch fresh
      - name: Make the branch fresh
        run: |
          git config --global --add safe.directory ${GITHUB_WORKSPACE}
          git config --global user.email "itcrtrainingnetwork@gmail.com"
          git config --global user.name "jhudsl-robot"
          branch_name='preview-${{ github.event.pull_request.number }}'
          echo branch doesnt exist
          git checkout -b $branch_name || echo branch exists
          git push --set-upstream origin $branch_name
        shell: bash

      - name: Check if this is a private repository
        id: public_repository
        run: |
          public=$(curl -Is https://github.com/${GITHUB_REPOSITORY} | head -1 | tr -dc '0-9')
          if [ $public -eq 2200 ];then
            public='true'
            echo 'public repository'
          else
            public='false'
            echo 'private repository'
          fi
          echo ::set-output name=public::$public
        shell: bash

    outputs:
      public_repository: "${{ steps.public_repository.outputs.public }}"
      toggle_spell_check: "${{ env.SPELL_CHECK }}"
      toggle_url_check: "${{ env.URL_CHECKER }}"
      toggle_render_preview: "${{ env.RENDER_PREVIEW }}"

  build-collection:
    name: Build Collection
    needs: yaml-check
    uses: ./.github/workflows/build-collection.yml
    with:
      render-type: 'preview'
      repository: $GITHUB_REPOSITORY
    secrets:
      gh_pat: ${{ secrets.GH_PAT }}

  spell-check:
    name: Check spelling
    needs: yaml-check
    if: ${{needs.yaml-check.outputs.toggle_spell_check == 'yes'}}
    uses: jhudsl/ottr-reports/.github/workflows/report-maker.yml@main
    with:
      check_type: spelling
      error_min: 3
      gh_pat: secrets.GH_PAT

  url-check:
    name: Check URLs
    needs: yaml-check
    if: ${{needs.yaml-check.outputs.toggle_url_check == 'yes'}}
    uses: jhudsl/ottr-reports/.github/workflows/report-maker.yml@main
    with:
      check_type: urls
      error_min: 0
      gh_pat: secrets.GH_PAT
      
  render-preview:
    name: Render preview
    needs: [yaml-check, build-collection]
    runs-on: ubuntu-latest
    container:
      image: jhudsl/course_template:main
    if: ${{needs.yaml-check.outputs.toggle_render_preview == 'yes'}}

    steps:
      - name: Checkout files
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Set up git checkout
      - name: Set up git checkout
        run: |
          git config --system --add safe.directory "$GITHUB_WORKSPACE"
          git config --local user.email "itcrtrainingnetwork@gmail.com"
          git config --local user.name "jhudsl-robot"
          branch_name='preview-${{ github.event.pull_request.number }}'
          git fetch --all
          git checkout $branch_name
          git merge -s recursive --strategy-option=theirs origin/${{ github.head_ref }} --allow-unrelated-histories
        shell: bash
        
      # # We want a fresh run of the renders each time - so first delete old index.md file
      # - name: Delete old index.md
      #   run: |
      #     rm -f _pages/index.md

      # Now we want to render Rmd -> md
      # Requires a little bit of shuffling around of files.
      - name: Convert Rmd to md
        run: |
          Rscript scripts/build.R
          mv index.Rmd _pages/
          mv index.html _pages/

      # Commit the rendered website files
      - name: Commit rendered website files to preview branch
        id: commit
        run: |
          branch_name='preview-${{ github.event.pull_request.number }}'
          echo ::set-output name=changes::$changes
          git add . --force
          git commit -m 'Render preview' || echo "No changes to commit"
          git pull --set-upstream origin $branch_name --allow-unrelated-histories --strategy-option=ours
          git push --force || echo "No changes to commit"
        shell: bash
